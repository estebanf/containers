/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.68
 * Generated at: 2016-05-04 10:50:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.widgets.processes;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class process_005fanalytics_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("var filterobjID,packageListDashboard = {};\n");
      out.write("/*PA in this file stands for Process Analytics*/\n");
      out.write("/*ready function for analtics*/\n");
      out.write("$(function () {\n");
      out.write("    var widgetStateId = $('#processAnalytics').closest('.widget').attr(\"id\");\n");
      out.write("    var widgetObject  = getWidgetObject(widgetStateId);\n");
      out.write("    if (widgetObject.filter ==''){\n");
      out.write("        var filterObject = {};\n");
      out.write("        filterObject.chartType = defaults.swf1;\n");
      out.write("        widgetObject.filter = filterObject;\n");
      out.write("        persistWidget(widgetObject);\n");
      out.write("    }\n");
      out.write("    var divId_PA = defaults.chart18 + widgetStateId;\n");
      out.write("    $('#processAnalytics').attr('id', divId_PA);\n");
      out.write("    $('#procAnalyticsFilter').attr('id', \"procAnalyticsFilter\"+widgetStateId);\n");
      out.write("    filterobjID = $(\"#procAnalyticsFilter\"+widgetStateId);\n");
      out.write("    var possibleCharts=[defaults.swf1,defaults.swf2,defaults.swf10,defaults.swf11,defaults.swf14];\n");
      out.write("    var possibleChartsNames=[\"MSColumn 3D\",\"Stacked Column 3D\",\"MSColumn 2D\",\"Stacked Column 2D\",\"MSBar\"];\n");
      out.write("    filterobjID.find('.chartTypes').empty();\n");
      out.write("    $.each(possibleCharts, function (idx, value) {\n");
      out.write("        filterobjID.find('.chartTypes').append('<option value=\"'+value+'\">'+possibleChartsNames[idx]+'</option>');\n");
      out.write("    });\n");
      out.write("    filterobjID.find('.chartTypes').chosen();\n");
      out.write("    filterobjID.find('.chartTypes').next().css('width',170);\n");
      out.write("    var showAnalyticsIn = '<option value=\"seconds\">Seconds</option><option value=\"minutes\">Minutes</option><option value=\"hours\">Hours</option><option value=\"days\">Days</option>';\n");
      out.write("    filterobjID.find('.showAnalyticsIn').append(showAnalyticsIn);\n");
      out.write("    filterobjID.find('.showAnalyticsIn').chosen();\n");
      out.write("    filterobjID.find('.showAnalyticsIn').next().css('width',170);\n");
      out.write("    var filterIcon = \"&nbsp;<a href='#' class='filterIcon' onclick='filterProcessPAChart(this);'><i title='Filter Chart' class='fa fa-cog'></i></a>\";\n");
      out.write("    var refreshIcon = \"<a onclick=getPAData(this); class='refreshChart' data-action='reload'><i title='Refresh' class='fa fa-refresh'></i></a>\";\n");
      out.write("    if ($(\"#\" + divId_PA).closest('.widget-box').find('.widget-toolbar').find('.filterIcon').length == 0) {\n");
      out.write("        $(\"#\" + divId_PA).closest('.widget-box').find('.widget-toolbar').children(':nth-child(2)').replaceWith(refreshIcon);\n");
      out.write("        $(\"#\" + divId_PA).closest('.widget-box').find('.widget-toolbar').prepend(filterIcon);\n");
      out.write("    }\n");
      out.write("    getPAData($(\"#\" + divId_PA),widgetStateId);\n");
      out.write("});//ready function end\n");
      out.write("\n");
      out.write("/*This function will get the data for analytics*/\n");
      out.write("function getPAData(obj,widId){\n");
      out.write("    clickRefresh(obj,true);\n");
      out.write("    var widgetStateId;\n");
      out.write("    var data = {};\n");
      out.write("    if ($(obj).length !=0)\n");
      out.write("        widgetStateId = $(obj).closest('.widget').attr(\"id\");\n");
      out.write("    else if (widId)\n");
      out.write("        widgetStateId = widId;\n");
      out.write("    var widgetObject = getWidgetObject(widgetStateId);\n");
      out.write("    if (widgetObject && widgetObject.filter && widgetObject.filter.process){\n");
      out.write("        var filterObject = widgetObject.filter;\n");
      out.write("        data.processid = filterObject.process;\n");
      out.write("        if(filterObject.activeProcess)\n");
      out.write("            data.activeOnly = filterObject.activeProcess;\n");
      out.write("        else\n");
      out.write("            data.activeOnly = false;\n");
      out.write("        sendAjaxCall('analytics/report', \"GET\", false, true, \"json\", data, PAErrorCall, function(responseData){\n");
      out.write("            clickRefresh(obj,false);\n");
      out.write("            if(responseData.error_message)\n");
      out.write("                showErrorNotification(responseData.error_message);\n");
      out.write("            else\n");
      out.write("                populatePAData(responseData,widgetStateId);\n");
      out.write("        });\n");
      out.write("    }else\n");
      out.write("        filterProcessPAChart($('#'+widId).find('.filterIcon'));\n");
      out.write("}\n");
      out.write("\n");
      out.write("/*This function will get the processes & packages list for filtering analytics*/\n");
      out.write("function filterProcessPAChart(obj){\n");
      out.write("    var widgetStateId = $(obj).closest('.widget').attr(\"id\");\n");
      out.write("    var widgetObject = getWidgetObject(widgetStateId);\n");
      out.write("    addLoading(filterobjID.find('.modal-body'));\n");
      out.write("    $('#loading').css('margin-top',30);\n");
      out.write("    filterobjID.find('.chartFilterTable .error-Msg').addClass('hide');\n");
      out.write("    modalShow('procAnalyticsFilter'+widgetStateId);\n");
      out.write("    $('#procAnalyticsFilter'+widgetStateId).find('.modal-dialog').css('width',675);\n");
      out.write("    var data = {};\n");
      out.write("    sendAjaxCall('dashboard/filters/processes', \"POST\", false, true, \"json\", data, PAErrorCall, function(responseData){\n");
      out.write("        if(responseData.error_message == undefined){\n");
      out.write("            paProcessFilter = responseData.process;\n");
      out.write("            populatePAFilterData(responseData,widgetStateId);\n");
      out.write("        }\n");
      out.write("        else\n");
      out.write("            showErrorNotification(responseData.error_message);\n");
      out.write("    });\n");
      out.write("}\n");
      out.write("\n");
      out.write("function populatePAFilterData(data,widgetStateId){\n");
      out.write("    var prevPackage;\n");
      out.write("    var widgetObject = getWidgetObject(widgetStateId);\n");
      out.write("    \n");
      out.write("    if (widgetObject && widgetObject.filter){\n");
      out.write("        var filterObject = widgetObject.filter;\n");
      out.write("        paActiveObj = filterobjID.find('.paActiveProc');\n");
      out.write("        if(filterObject.activeProcess)\n");
      out.write("            paActiveObj.prop('checked',filterObject.activeProcess);\n");
      out.write("        else\n");
      out.write("            paActiveObj.prop('checked',false);\n");
      out.write("        updatePAPackages(paActiveObj);\n");
      out.write("        if (filterObject.chartType){\n");
      out.write("            filterobjID.find('.chartTypes').next().remove();\n");
      out.write("            filterobjID.find('.chartTypes').removeAttr('style').removeClass('chzn-done');\n");
      out.write("            filterobjID.find('.chartTypes').val(filterObject.chartType);\n");
      out.write("            filterobjID.find('.chartTypes').chosen();\n");
      out.write("            filterobjID.find('.chartTypes').next().css('width',170);\n");
      out.write("        }\n");
      out.write("        if (filterObject.showAnalyticsIn){\n");
      out.write("            filterobjID.find('.showAnalyticsIn').next().remove();\n");
      out.write("            filterobjID.find('.showAnalyticsIn').removeAttr('style').removeClass('chzn-done');\n");
      out.write("            filterobjID.find('.showAnalyticsIn').val(filterObject.showAnalyticsIn);\n");
      out.write("            filterobjID.find('.showAnalyticsIn').chosen();\n");
      out.write("            filterobjID.find('.showAnalyticsIn').next().css('width',170);\n");
      out.write("        }        \n");
      out.write("    }\n");
      out.write("    if(widgetObject != null) {\n");
      out.write("        if (widgetObject.title)\n");
      out.write("            filterobjID.find('.chartName').val(widgetObject.title);\n");
      out.write("    }\n");
      out.write("    filterobjID.find('.analyticsPackageList').attr('widgetId',widgetStateId);\n");
      out.write("    filterobjID.find('.analyticsPackageList').chosen();\n");
      out.write("    filterobjID.find('.analyticsPackageList').next().css('width',410);\n");
      out.write("    filterobjID.find('.analyticsPackageList').next().find('li.search-field input').css('width',250);\n");
      out.write("    filterobjID.find('.analyticsPackageList').next().find('li.search-field input').css('height',25);\n");
      out.write("    removeLoading(filterobjID.find('.modal-body'));\n");
      out.write("    filterobjID.find('.modal-footer .applyButton').attr('widgetId',widgetStateId);\n");
      out.write("}\n");
      out.write("\n");
      out.write("function updatePAPackages(obj){\n");
      out.write("    var prevPackage,changedPackage=[];\n");
      out.write("    var widgetStateId = $(obj).closest('.widget').attr(\"id\");\n");
      out.write("    paPackageObj = filterobjID.find('.analyticsPackageList');\n");
      out.write("    paProcessObj = filterobjID.find('.analyticsProcessesList');\n");
      out.write("    \n");
      out.write("    paPackageObj.removeAttr('style').removeClass('chzn-done');\n");
      out.write("    paProcessObj.removeAttr('style').removeClass('chzn-done');\n");
      out.write("    paProcessObj.next().remove();\n");
      out.write("    paPackageObj.next().remove();\n");
      out.write("    \n");
      out.write("    paProcessObj.closest('tr').addClass('hide');\n");
      out.write("    paPackageObj.empty();\n");
      out.write("    packageListDashboard = {};\n");
      out.write("    var widgetObject = getWidgetObject(widgetStateId);\n");
      out.write("    var filterObject = widgetObject.filter;\n");
      out.write("    $.each(paProcessFilter,function(key,value){\n");
      out.write("       if(value.package){\n");
      out.write("            if(($(obj).prop('checked') && value.status===\"ACTIVE\") || !$(obj).prop('checked')) {\n");
      out.write("                prevPackage = value.id;\n");
      out.write("                packageListDashboard[prevPackage] = [];\n");
      out.write("                addCheck= false;\n");
      out.write("                if(filterObject.package){\n");
      out.write("                    $.each(filterObject.package,function(key1,value1){\n");
      out.write("                        if($(obj).prop('checked')){\n");
      out.write("                            if(value1 == value.id || String(value1).split('/')[0]===String(value.id).split('-')[0] || String(value1).split('-')[0] === String(value.id).split('-')[0]){\n");
      out.write("                                addCheck = true;\n");
      out.write("                                changedPackage.push(value.id);\n");
      out.write("                                paPackageObj.append('<option value=\"'+value.id+'\" selected=selected>'+value.name+' ['+value.version+']</option>');\n");
      out.write("                            }\n");
      out.write("                        }else if(value1 == value.id){\n");
      out.write("                                addCheck = true;\n");
      out.write("                                changedPackage.push(value.id);\n");
      out.write("                                paPackageObj.append('<option value=\"'+value.id+'\" selected=selected>'+value.name+' ['+value.version+']</option>');\n");
      out.write("                        }\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("                if(!addCheck)\n");
      out.write("                    paPackageObj.append('<option value=\"'+value.id+'\">'+value.name+' ['+value.version+']</option>')        \n");
      out.write("            }\n");
      out.write("        }else if(($(obj).prop('checked') && value.status===\"ACTIVE\") || !$(obj).prop('checked'))\n");
      out.write("            packageListDashboard[prevPackage].push({name:value.name,id:value.id});\n");
      out.write("        $(paPackageObj).find('option').each(function() {\n");
      out.write("            $(this).prevAll('option[value=\"' + this.value + '\"]').remove();\n");
      out.write("        });\n");
      out.write("    });\n");
      out.write("    paPackageObj.attr('widgetId',widgetStateId);\n");
      out.write("    paPackageObj.chosen();\n");
      out.write("    paPackageObj.next().css('width',410);\n");
      out.write("    paPackageObj.next().find('li.search-field input').css('width',250);\n");
      out.write("    paPackageObj.next().find('li.search-field input').css('height',25);\n");
      out.write("    if(filterObject.package)        \n");
      out.write("        fetchFilterProcessesPA('',changedPackage,widgetStateId);\n");
      out.write("}\n");
      out.write("\n");
      out.write("function applyPAFilter(obj){\n");
      out.write("    var widgetStateId = $(obj).attr(\"widgetId\");\n");
      out.write("    var widgetObject = getWidgetObject(widgetStateId);\n");
      out.write("    var filterObject = {};\n");
      out.write("    var modalObj = $(obj).closest('.modal');\n");
      out.write("    var data = {}\n");
      out.write("    var oldObject = JSON.parse( JSON.stringify( widgetObject.filter));\n");
      out.write("        delete oldObject.chartType;\n");
      out.write("    if($(modalObj).find('.chartName').val()==\"\"){\n");
      out.write("        $(modalObj).find('.error-Msg').removeClass('hide').text($('#widgetChartNameErrorMsg').text());\n");
      out.write("        $(modalObj).find('.chartName').focus();\n");
      out.write("        return false;\n");
      out.write("    }\n");
      out.write("    else if($(modalObj).find('.analyticsPackageList').val()==null){\n");
      out.write("        $(modalObj).find('.error-Msg').removeClass('hide').text($('#widgetPackageErrorMsg').text());\n");
      out.write("        return false;\n");
      out.write("    }\n");
      out.write("    else if($(modalObj).find('.analyticsProcessesList').val()==null){\n");
      out.write("        $(modalObj).find('.error-Msg').removeClass('hide').text($('#widgetProcessErrorMsg').text());\n");
      out.write("        return false;\n");
      out.write("    }\n");
      out.write("    if ($(modalObj).find('.chartTypes').val())\n");
      out.write("        filterObject.chartType = $(modalObj).find('.chartTypes').val();\n");
      out.write("    if ($(modalObj).find('.showAnalyticsIn').val())\n");
      out.write("        filterObject.showAnalyticsIn = $(modalObj).find('.showAnalyticsIn').val();\n");
      out.write("    if ($(modalObj).find('.chartName').val()){\n");
      out.write("            widgetObject.title =  $(modalObj).find('.chartName').val();\n");
      out.write("            $('#'+widgetStateId).find('.widget-name').text($(modalObj).find('.chartName').val()); \n");
      out.write("    }\n");
      out.write("    if ($(modalObj).find('.analyticsPackageList').val()){\n");
      out.write("        filterObject.package = $(modalObj).find('.analyticsPackageList').val();\n");
      out.write("        if ($(modalObj).find('.analyticsProcessesList').val()){\n");
      out.write("            filterObject.process = $(modalObj).find('.analyticsProcessesList').val();\n");
      out.write("            data.processid = $(modalObj).find('.analyticsProcessesList').val();\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    var activeOnly = filterobjID.find('.paActiveProc').prop('checked');\n");
      out.write("    data.activeOnly = activeOnly;\n");
      out.write("    filterObject.activeProcess = activeOnly;\n");
      out.write("\n");
      out.write("    widgetObject.filter = filterObject;\n");
      out.write("    persistWidget(widgetObject);\n");
      out.write("    var newObject = JSON.parse( JSON.stringify( filterObject ) )\n");
      out.write("    delete newObject.chartType;\n");
      out.write("    delete newObject.showAnalyticsIn;\n");
      out.write("    if (compareObjects(newObject,oldObject)){\n");
      out.write("        filterobjID.modal('hide');\n");
      out.write("        changeChartType_PA(widgetStateId);\n");
      out.write("    }\n");
      out.write("    else{\n");
      out.write("        filterobjID.modal('hide');\n");
      out.write("        clickRefresh($('#'+widgetStateId).find('.widget-header'),true);\n");
      out.write("        sendAjaxCall('analytics/report', \"GET\", false, true, \"json\", data, PAErrorCall, function(data1){ \n");
      out.write("            clickRefresh($('#'+widgetStateId).find('.widget-header'),false);\n");
      out.write("            if(responseData.error_message == undefined)\n");
      out.write("                populatePAData(data1,widgetStateId) ;\n");
      out.write("            else\n");
      out.write("                showErrorNotification(responseData.error_message);\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("}\n");
      out.write("\n");
      out.write("function fetchFilterProcessesPA(obj,pkgList,widgetId){\n");
      out.write("    var processesInPackage,widgetStateId,processesObj = filterobjID.find('.analyticsProcessesList')\n");
      out.write("    if ($(obj).length !=0 ){\n");
      out.write("        widgetStateId = $(obj).attr('widgetId');\n");
      out.write("        processesInPackage = $(obj).val();\n");
      out.write("    } else {\n");
      out.write("        widgetStateId = widgetId;\n");
      out.write("        processesInPackage = pkgList;\n");
      out.write("    }\n");
      out.write("    var widgetObject = getWidgetObject(widgetStateId);\n");
      out.write("    var prevProcessList = processesObj.val();\n");
      out.write("    if($(obj).length == 0){\n");
      out.write("        if (widgetObject != null && widgetObject.filter != undefined && widgetObject.filter != null && widgetObject.filter != ''){\n");
      out.write("            var filterObject = widgetObject.filter;\n");
      out.write("            if (filterObject.process != undefined && filterObject.process != null){\n");
      out.write("                prevProcessList = filterObject.process;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    filterobjID.find('.error-Msg').addClass('hide');\n");
      out.write("    processesObj.removeAttr('style').removeClass('chzn-done');\n");
      out.write("    processesObj.next().remove();\n");
      out.write("    processesObj.empty();\n");
      out.write("    if(processesInPackage  && processesInPackage.length >0){\n");
      out.write("        $.each(processesInPackage,function(key,value){\n");
      out.write("            $.each(packageListDashboard[value],function(key1,value1){\n");
      out.write("                if(prevProcessList && prevProcessList.length >0){\n");
      out.write("                    var checkFlag = false;\n");
      out.write("                    $.each(prevProcessList,function(key2,value2){\n");
      out.write("                        if(filterobjID.find('.paActiveProc').prop('checked')){\n");
      out.write("                           if(value2==value1.id || value2.split('}')[1].split('-')[0]===String(value1.id).split('}')[1].split('-')[0]){\n");
      out.write("                                checkFlag=true;\n");
      out.write("                                processesObj.append('<option value=\"'+value1.id+'\" selected>'+value1.name+'</option>');\n");
      out.write("                            }\n");
      out.write("                        }\n");
      out.write("                        else if(value2==value1.id){\n");
      out.write("                            checkFlag=true;\n");
      out.write("                            processesObj.append('<option value=\"'+value1.id+'\" selected>'+value1.name+'</option>');\n");
      out.write("                        }\n");
      out.write("                    });\n");
      out.write("                    if(checkFlag==false)\n");
      out.write("                        processesObj.append('<option value=\"'+value1.id+'\">'+value1.name+'</option>');\n");
      out.write("                }\n");
      out.write("                else\n");
      out.write("                    processesObj.append('<option value=\"'+value1.id+'\">'+value1.name+'</option>');\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("        $(processesObj).find('option').each(function() {\n");
      out.write("            $(this).prevAll('option[value=\"' + this.value + '\"]').remove();\n");
      out.write("        });\n");
      out.write("        processesObj.chosen({max_selected_options: 10});\n");
      out.write("        processesObj.unbind(\"liszt:maxselected\").bind(\"liszt:maxselected\", function (){\n");
      out.write("            filterobjID.find('.error-Msg').removeClass('hide').text($('#widgetProcessMaxErrorMsg').text());\n");
      out.write("            return false;\n");
      out.write("        });\n");
      out.write("        processesObj.next().css('width',410);\n");
      out.write("        processesObj.next().find('li.search-field input').css('width',250).css('height',25);\n");
      out.write("        processesObj.closest('tr').removeClass('hide');\n");
      out.write("    } else\n");
      out.write("        processesObj.closest('tr').addClass('hide');\n");
      out.write("}\n");
      out.write("\n");
      out.write("/*This function helps to populate the process analytics data*/\n");
      out.write("function populatePAData(data, widgetId) {\n");
      out.write("    var widgetObject = getWidgetObject(widgetId);\n");
      out.write("    var filterObject = widgetObject.filter;\n");
      out.write("    var dataArray=new Object();\n");
      out.write("    var chartData = \"\";\n");
      out.write("    var yaxisName = \"Completion time in\"+\" \"+filterObject.showAnalyticsIn.charAt(0).toUpperCase()+filterObject.showAnalyticsIn.slice(1);\n");
      out.write("    if(!isObjectEmpty(data.reports) && data.reports.length>0){\n");
      out.write("        chartData = '{\"chart\": {\"yaxisname\":\"'+yaxisName+'\",\"showvalues\": \"1\",\"labeldisplay\": \"WRAP\",\"canvasBorderThickness\":\"0\",\"issliced\":\"0\",\"bgColor\":\"FFFFFF,FFFFFF\",\"showBorder\":\"0\",\"canvasBgRatio\":\"100,0\",\"showlegend\": \"1\",\"showlabels\":\"1\",\"paletteColors\":\"69AA46,FF892A\",\"useroundedges\": \"1\", \"showalternatevgridcolor\": \"1\",\"canvasbgcolor\":\"#fafbf9\"},';\n");
      out.write("        var categories = '\"categories\": [{\"category\": [';\n");
      out.write("        var meanData='{\"seriesname\": \"Mean\",\"data\": [';\n");
      out.write("        var medianData = '{\"seriesname\": \"Median\",\"data\": [';\n");
      out.write("        var formula = 60000;\n");
      out.write("        if(filterObject.showAnalyticsIn==\"seconds\")\n");
      out.write("            formula = 1000;    \n");
      out.write("        else if(filterObject.showAnalyticsIn==\"minutes\")\n");
      out.write("            formula = 60000;\n");
      out.write("        else if(filterObject.showAnalyticsIn==\"hours\")\n");
      out.write("            formula = 3600000;\n");
      out.write("        else if(filterObject.showAnalyticsIn=\"days\")\n");
      out.write("            formula = 86400000;\n");
      out.write("        $.each(data.reports,function(idx,value){\n");
      out.write("            if(value){\n");
      out.write("                if(dataArray[value.processId]==null){\n");
      out.write("                    dataArray[value.processId]=new Object();\n");
      out.write("                    if(value.processId){\n");
      out.write("                         dataArray[value.processId].NAME = value.processId.split('}')[1]\n");
      out.write("                    }   \n");
      out.write("                    dataArray[value.processId].MEAN=(Math.round(value.mean)/formula).toFixed(1);\n");
      out.write("                    dataArray[value.processId].MEDIAN=(Math.round(value.median)/formula).toFixed(1);\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("        $.each(dataArray,function(idx,value){\n");
      out.write("            categories += '{ \"label\":\"'+value.NAME+'\"},';\n");
      out.write("            meanData += '{ \"value\":\"'+value.MEAN+'\"},';\n");
      out.write("            medianData += '{ \"value\":\"'+value.MEDIAN+'\"},';\n");
      out.write("        });\n");
      out.write("        categories=categories.substring(0, categories.length - 1);\n");
      out.write("        meanData  =meanData.substring(0, meanData.length - 1);\n");
      out.write("        medianData=medianData.substring(0, medianData.length - 1);\n");
      out.write("        categories += ']}],';\n");
      out.write("        meanData += ']}';\n");
      out.write("        medianData += ']}';\n");
      out.write("        chartData += categories+ '\"dataset\": ['+ meanData +','+medianData+ ']}';\n");
      out.write("    }\n");
      out.write("    renderChart_PA(chartData,widgetId);\n");
      out.write("}\n");
      out.write("\n");
      out.write("function renderChart_PA(data,widgetId){ \n");
      out.write("    var widgetObject = getWidgetObject(widgetId);\n");
      out.write("    var filterObject = widgetObject.filter;\n");
      out.write("    var chartType_PA;\n");
      out.write("    if (filterObject.chartType)\n");
      out.write("        chartType_PA = filterObject.chartType;\n");
      out.write("    else\n");
      out.write("        chartType_PA = defaults.swf1;\n");
      out.write("    FusionCharts.setCurrentRenderer('javascript');\n");
      out.write("    if(FusionCharts(\"PA\"+widgetId))\n");
      out.write("        FusionCharts(\"PA\"+widgetId).dispose();\n");
      out.write("    var procAnalytics = new FusionCharts(\"widgets/swf/\"+chartType_PA,\"PA\"+widgetId);\n");
      out.write("    procAnalytics.setJSONData(data);\n");
      out.write("    data=procAnalytics.getJSONData();\n");
      out.write("    procAnalytics.setJSONData(data);\n");
      out.write("    procAnalytics.setTransparent(true);\n");
      out.write("    procAnalytics.render(defaults.chart18 + widgetId);      \n");
      out.write("}\n");
      out.write("    \n");
      out.write("function changeChartType_PA(widgetId){\n");
      out.write("    var chartRef = FusionCharts(\"PA\" + widgetId);\n");
      out.write("    renderChart_PA(chartRef.getJSONData(),widgetId);\n");
      out.write("}\n");
      out.write("\n");
      out.write("function PAErrorCall(error){\n");
      out.write("    showErrorNotification(error);\n");
      out.write("}\n");
      out.write("\n");
      out.write("function checkFilterPA(obj){\n");
      out.write("    var widgetId = $(obj).closest('.modal').find('.applyButton').attr('widgetId');\n");
      out.write("    clickRefresh($('#'+widgetId).find('.widget-header'),false);\n");
      out.write("    var widgetObject = getWidgetObject(widgetId);\n");
      out.write("    if(widgetObject==undefined || widgetObject.filter.process==undefined)\n");
      out.write("        $(obj).closest('.widget-body').find('.chart').text($('#widgetProcessFilterErrorMsg').text());\n");
      out.write("    modalHide($(obj).closest('.modal').attr('id'));\n");
      out.write("}\n");
      out.write("\n");
      out.write("$('.chartName').parent().prev().text($('#widgetChartName').text());\n");
      out.write("$('.analyticsPackageList').parent().prev().text($('#widgetPackages').text());\n");
      out.write("$('.analyticsProcessesList').parent().prev().text($('#widgetProcesses').text());\n");
      out.write("$('.chartTypes').parent().prev().text($('#widgetChartType').text());\n");
      out.write("$('.showAnalyticsIn').parent().prev().text($('#widgetAnalyticsIn').text());\n");
      out.write("$('.applyButton').text($('#widgetFilterApply').text());\n");
      out.write("$('.paLabelActiveProcess').text($(\"#widgetActiveProcess\").text());\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div id='processAnalytics' class=\"chart\"></div>\n");
      out.write("<div id=\"procAnalyticsFilter\" class=\"modal fade\" tabindex=\"-1\">\n");
      out.write("    <div class=\"modal-dialog\">\n");
      out.write("        <div class=\"modal-content\">\n");
      out.write("            <div class=\"modal-header\">\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n");
      out.write("                    aria-hidden=\"true\" onclick='javascript:checkFilterPA(this)'>&times;</button>\n");
      out.write("                <span class=\"modal_heading\">Process Analytics</span>\n");
      out.write("            </div>\n");
      out.write("             <div class=\"modal-body\">\n");
      out.write("                <table class=\"table noLines chartFilterTable\">\n");
      out.write("                    <tr><td class=\"error-Msg text-danger hide\" colspan=\"2\"></td></tr>\n");
      out.write("                    <tr><td></td><td colspan=\"3\"><input type=\"text\" class=\"chartName\" maxlength=\"50\"></td></tr>\n");
      out.write("                    <tr class='paActiveProcess'>\n");
      out.write("                        <td class='paLabelActiveProcess'></td>\n");
      out.write("                        <td colspan=\"3\">\n");
      out.write("                        <label class=\"inline\">\n");
      out.write("                        <input onchange='updatePAPackages(this)' type=\"checkbox\" class=\"paActiveProc ace ace-switch ace-switch-5\">\n");
      out.write("                            <span class=\"lbl\"></span>\n");
      out.write("                        </label>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <td></td>\n");
      out.write("                        <td colspan=\"3\"><select multiple class=\"analyticsPackageList\" id='analyticsPackageList' onchange=\"fetchFilterProcessesPA(this);\" data-placeholder=\"Select Packages\"><option value=\"-1\">Select Package</option></select></td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr class=\"hide\">\n");
      out.write("                        <td></td>\n");
      out.write("                        <td colspan=\"3\"><select multiple class=\"analyticsProcessesList\" id=\"analyticsProcessesList\" data-placeholder=\"Select Processes\"><option value=\"-1\">Select Process</option></select></td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <td></td>\n");
      out.write("                        <td>\n");
      out.write("                            <select class=\"chartTypes\"></select>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <td></td>\n");
      out.write("                        <td>\n");
      out.write("                            <select class=\"showAnalyticsIn\"></select>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                </table>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"modal-footer\">\n");
      out.write("                <button class=\"btn btn-primary btn-sm applyButton\" type=\"button\" aria-hidden=\"true\" onclick=\"applyPAFilter(this);return false;\"></button>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
